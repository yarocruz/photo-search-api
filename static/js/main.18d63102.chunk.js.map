{"version":3,"sources":["App.js","hooks/usePhotoSearch.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","search","setSearch","pageNumber","setPageNumber","loading","setLoading","error","setError","photos","setPhotos","hasMore","setHasMore","useEffect","controller","AbortController","signal","fetch","method","then","response","a","json","data","prevPhotos","results","length","console","log","ok","Promise","reject","catch","err","aborted","abort","usePhotoSearch","observer","useRef","lastImgElement","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","className","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","icon","faSearch","map","photo","index","ref","src","urls","full","alt","alt_description","style","maxWidth","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d63102.chunk.js","sourcesContent":["import React, { useCallback, useState, useRef } from 'react'\nimport usePhotoSearch from \"./hooks/usePhotoSearch\";\nimport './App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\n\nfunction App() {\n\n    const [query, setQuery] = useState('')\n    const [search, setSearch] = useState('')\n    const [pageNumber, setPageNumber] = useState(1)\n\n    const { photos, error, hasMore, loading } = usePhotoSearch(query, pageNumber)\n\n    const observer = useRef();\n\n    const lastImgElement = useCallback(node => {\n       if (loading) return\n       if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n           if(entries[0].isIntersecting && hasMore) {\n               setPageNumber(prevPageNumber => prevPageNumber + 1)\n           }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    function handleSearchSubmit(e) {\n        e.preventDefault()\n        setQuery(search)\n        setSearch('')\n        setPageNumber(1)\n    }\n\n    function handleSearch(e) {\n        setSearch(e.target.value)\n    }\n\n  return (\n    <div>\n        <div className=\"form-wrap\">\n            <form className=\"form\" onSubmit={handleSearchSubmit}>\n                <input\n                    className=\"input-search\"\n                    value={search}\n                    onChange={handleSearch}\n                    type=\"text\"\n                    placeholder=\"Search for a Photo\"\n                />\n                <button className=\"search-button\" type=\"submit\">\n                    <FontAwesomeIcon icon={faSearch} />\n                </button>\n            </form>\n            {query ? <p>{`Search results for \"${query}\"`}</p> : <p>Please enter a search term</p>}\n        </div>\n        {photos.map((photo, index) => (\n            photos.length === index + 1 ? <img ref={lastImgElement} key={photo.id} src={photo.urls.full} alt={photo.alt_description} style={{ maxWidth: '100%'}}/>\n            : <img key={photo.id} src={photo.urls.full} alt={photo.alt_description} style={{ maxWidth: '100%'}}/>\n        ))}\n\n        <div>{loading && 'Loading'}</div>\n        <div>{error && 'Error'}</div>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import {useEffect, useState} from 'react'\n\nexport default function usePhotoSearch(query, pageNumber) {\n\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [photos, setPhotos] = useState([])\n    const [hasMore, setHasMore] = useState(false)\n    useEffect(() => {\n        setPhotos([])\n    }, [query])\n\n    useEffect(() => {\n        setLoading(true)\n        setError(false)\n        const controller = new AbortController()\n        const signal = controller.signal\n        const apiKey = 'BJD0Ft5i5Qwk6bmbM5zaeFqR3c8uNVz0DZRBxojk4fo'\n        const apiUrl = `https://api.unsplash.com/search/photos/?client_id`\n\n        fetch(`${apiUrl}=${apiKey}&page=${pageNumber}&content_filter=high&query=${query}`,\n            {\n                method: 'get',\n                signal: signal,\n            })\n            .then(async response => {\n                const data = await response.json()\n                setPhotos(prevPhotos => {\n                    return [...prevPhotos, ...data.results]\n                })\n                setHasMore( data.results.length > 0)\n                console.log(data.results.length)\n                setLoading(false)\n                if (response.ok) {\n                    console.log(data)\n                } else {\n                    return Promise.reject(data)\n                }\n            })\n            .catch(err => {\n                if(signal.aborted) return\n                setError(true)\n                console.log(err)\n            })\n        return () => controller.abort()\n\n    }, [query, pageNumber])\n    return { loading, error, photos, hasMore }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}